#!/usr/bin/env php
<?php

/**
 * Observium
 *
 *   This file is part of Observium.
 *
 * @package    observium
 * @subpackage poller
 * @author     Adam Armstrong <adama@memetic.org>
 * @copyright  (C) 2006-2015 Adam Armstrong
 *
 */

chdir(dirname($argv[0]));

include_once("includes/defaults.inc.php");
include_once("config.php");

$options = getopt("h:i:m:n:dqrsV");

include_once("includes/definitions.inc.php");
include("includes/functions.inc.php");
include("includes/polling/functions.inc.php");
include("html/includes/functions.inc.php");

$scriptname = basename($argv[0]);

$start = utime();

if (isset($options['V']))
{
  print_message(OBSERVIUM_PRODUCT." ".OBSERVIUM_VERSION);
  exit;
}

if (isset($options['s']))
{
  // User has asked for spam. LETS MAKE THE SPAM. (sends alerts even if they have already been sent)
  $spam = TRUE;
}

if (!isset($options['q']))
{
  print_message("%g".OBSERVIUM_PRODUCT." ".OBSERVIUM_VERSION."\n%WAlerter%n\n", 'color');
}

if ($options['h'] == "all")  { $where = " "; $doing = "all"; }
elseif ($options['h'])
{
  $params = array();
  if (is_numeric($options['h']))
  {
    $where = "AND `device_id` = ?";
    $doing = $options['h'];
    $params[] = $options['h'];    
  }
  else
  {
    $where = "AND `hostname` LIKE ?";
    $doing = $options['h'];
    $params[] = str_replace('*','%', $options['h']);
  }
}

if (!$where)
{
  print_message("%n
USAGE:
$scriptname [-drqV] [-i instances] [-n number] [-m module] [-h device]

EXAMPLE:
-h <device id> | <device hostname wildcard>  Poll single device
-h odd                                       Poll odd numbered devices  (same as -i 2 -n 0)
-h even                                      Poll even numbered devices (same as -i 2 -n 1)
-h all                                       Poll all devices
-h new                                       Poll all devices that have not had a discovery run before

-i <instances> -n <number>                   Poll as instance <number> of <instances>
                                             Instances start at 0. 0-3 for -n 4

OPTIONS:
 -h                                          Device hostname, id or key odd/even/all/new.
 -i                                          Poll instance.
 -n                                          Poll number.
 -s                                          Sends alerts even if they have already been sent.
 -q                                          Quiet output.
 -V                                          Show version and exit.

DEBUGGING OPTIONS:
 -r                                          Do not create or update RRDs
 -d                                          Enable debugging output.
 -dd                                         More verbose debugging output.
 -m                                          Specify module(s) (separated by commas) to be run.

%r无效的参数!%n", 'color');
  exit;
}

echo("启动报警器运行:\n\n");
$polled_devices = 0;
if (!isset($query))
{
  $query = "SELECT `device_id` FROM `devices` WHERE `disabled` = 0 $where ORDER BY `device_id` ASC";
}

$alert_rules = cache_alert_rules();
$alert_assoc = cache_alert_assoc();

// Allow the URL building code to build URLs with proper links.
$_SESSION['userlevel'] = 10;

foreach (dbFetch($query, $params) as $device)
{
   $device = dbFetchRow("SELECT * FROM `devices` WHERE `device_id` = ?", array($device['device_id']));

   humanize_device($device);

   // Overwrite the autogenerated base_url with external_url when we can't guess.
   ## FIXME -- Do this automatically when we know we're not running in a webserver.
   $config['base_url'] = $config['external_url'];

   process_alerts($device);

}

// EOF
