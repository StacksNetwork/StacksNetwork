//
// Tables
// --------------------------------------------------


// BASE TABLES
// -----------------

table {
  max-width: 100%;
  background-color: @tableBackground;
  border-collapse: collapse;
  border-spacing: 0;
  color: #777;
}

// BASELINE STYLES
// ---------------

.table {
  width: 100%;
  margin-bottom: @margin-base;
  // Cells
  th,
  td {
    padding: 8px;
    line-height: @line-height-base;
    text-align: left;
    vertical-align: top;
    border-top: 1px solid @tableBorder;
  }
  th {
    font-size: 13px;
  }
  // Bottom align for column headings
  thead th {
    vertical-align: bottom;
    #gradient > .vertical(@gradient-light, @gradient-dark);
	}
  // Remove top border from thead by default
  caption + thead tr:first-child th,
  caption + thead tr:first-child td,
  colgroup + thead tr:first-child th,
  colgroup + thead tr:first-child td,
  thead:first-child tr:first-child th,
  thead:first-child tr:first-child td {
    border-top: 0;
  }
  // Account for multiple tbody instances
  tbody + tbody {
    border-top: 2px solid @tableBorder;
  }

  // Nesting
  .table {
    background-color: @body-bg;
    margin-bottom: 0px;
  }
}

// TABLE IN A WELL
// ---------------

.well .table {
  margin-bottom: 0px;
}

// CONDENSED TABLE W/ HALF PADDING
// -------------------------------

.table-condensed {
  th,
  td {
    padding: 4px 5px;
  }
}

.table-condensed-more {
  th,
  td {
    padding: 2px 5px 3px 5px;
  }
}

.table-transparent {
  background: transparent;
}

// BORDERED VERSION
// ----------------

.table-bordered {
  border: 1px solid @tableBorder;
  border-collapse: separate; // Done so we can round those corners!
  *border-collapse: collapse; // IE7 can't round corners anyway
  border-left: 0;
  .border-radius(@border-radius-base);
  th,
  td {
    border-left: none;
  }
  // Prevent a double border
  caption + thead tr:first-child th,
  caption + tbody tr:first-child th,
  caption + tbody tr:first-child td,
  colgroup + thead tr:first-child th,
  colgroup + tbody tr:first-child th,
  colgroup + tbody tr:first-child td,
  thead:first-child tr:first-child th,
  tbody:first-child tr:first-child th,
  tbody:first-child tr:first-child td {
    border-top: 0;
  }
  // For first th/td in the first row in the first thead or tbody
  thead:first-child tr:first-child > th:first-child,
  tbody:first-child tr:first-child > td:first-child,
  tbody:first-child tr:first-child > th:first-child {
    .border-top-left-radius(@border-radius-base);
  }
  // For last th/td in the first row in the first thead or tbody
  thead:first-child tr:first-child > th:last-child,
  tbody:first-child tr:first-child > td:last-child,
  tbody:first-child tr:first-child > th:last-child {
    .border-top-right-radius(@border-radius-base);
  }
  // For first th/td (can be either) in the last row in the last thead, tbody, and tfoot
  thead:last-child tr:last-child > th:first-child,
  tbody:last-child tr:last-child > td:first-child,
  tbody:last-child tr:last-child > th:first-child,
  tfoot:last-child tr:last-child > td:first-child,
  tfoot:last-child tr:last-child > th:first-child {
    .border-bottom-left-radius(@border-radius-base);
  }
  // For last th/td (can be either) in the last row in the last thead, tbody, and tfoot
  thead:last-child tr:last-child > th:last-child,
  tbody:last-child tr:last-child > td:last-child,
  tbody:last-child tr:last-child > th:last-child,
  tfoot:last-child tr:last-child > td:last-child,
  tfoot:last-child tr:last-child > th:last-child {
    .border-bottom-right-radius(@border-radius-base);
  }

  // Clear border-radius for first and last td in the last row in the last tbody for table with tfoot
  tfoot + tbody:last-child tr:last-child td:first-child {
    .border-bottom-left-radius(0);
  }
  tfoot + tbody:last-child tr:last-child td:last-child {
    .border-bottom-right-radius(0);
  }

  // Special fixes to round the left border on the first td/th
  caption + thead tr:first-child th:first-child,
  caption + tbody tr:first-child td:first-child,
  colgroup + thead tr:first-child th:first-child,
  colgroup + tbody tr:first-child td:first-child {
    .border-top-left-radius(@border-radius-base);
  }
  caption + thead tr:first-child th:last-child,
  caption + tbody tr:first-child td:last-child,
  colgroup + thead tr:first-child th:last-child,
  colgroup + tbody tr:first-child td:last-child {
    .border-top-right-radius(@border-radius-base);
  }
  thead th:first-child,
  tbody th:first-child,
  tbody td:first-child {
    border-left: 1px solid #dddddd;
  } 
}

.widget .table-bordered {

  thead:first-child tr:first-child > th:first-child,
  tbody:first-child tr:first-child > td:first-child,
  tbody:first-child tr:first-child > th:first-child {
    .border-top-left-radius(0px);
  }
}


// ZEBRA-STRIPING
// --------------

// Default zebra-stripe styles (alternating gray and transparent backgrounds)
.table-striped {
  tbody {
    > tr:nth-child(even) > td,
    > tr:nth-child(even) > th {
      background-color: @tableBackgroundAccent;
    }
  }
}

.table-striped-two {
  tbody {
    > tr:nth-child(4n+3) > td,
    > tr:nth-child(4n+3) > th,
    > tr:nth-child(4n+4) > td,
    > tr:nth-child(4n+4) > th,	{
      background-color: @tableBackgroundAccent;
    }
	> tr:nth-child(2n) td,
	> tr:nth-child(2n) th {
	  border-top: none;
	}
  }
}

.table-striped-three {
  tbody {
    > tr:nth-child(6n+3) > td,
    > tr:nth-child(6n+3) > th,
	> tr:nth-child(6n+4) > td,
    > tr:nth-child(6n+4) > th,
    > tr:nth-child(6n+5) > td,
    > tr:nth-child(6n+5) > th,	{
      background-color: @tableBackgroundAccent;
    }
    > tr:nth-child(3n-1) td,
	> tr:nth-child(3n-1) th
	> tr:nth-child(3n) td,
	> tr:nth-child(3n) th {
	  border-top: none;
	}
  }  
}

// HOVER EFFECT
// ------------
// Placed here since it has to come after the potential zebra striping
.table-hover {
  tbody {
    tr:hover > td,
    tr:hover > th {
      background-color: @tableBackgroundHover;
    }
  }
}


// TABLE CELL SIZING
// -----------------

// Reset default grid behavior
table td[class*="span"],
table th[class*="span"],
.row-fluid table td[class*="span"],
.row-fluid table th[class*="span"] {
  display: table-cell;
  float: none; // undo default grid column styles
  margin-left: 0; // undo default grid column styles
}

// Change the column widths to account for td/th padding
.table td,
.table th {
  &.span1     { .tableColumns(1); }
  &.span2     { .tableColumns(2); }
  &.span3     { .tableColumns(3); }
  &.span4     { .tableColumns(4); }
  &.span5     { .tableColumns(5); }
  &.span6     { .tableColumns(6); }
  &.span7     { .tableColumns(7); }
  &.span8     { .tableColumns(8); }
  &.span9     { .tableColumns(9); }
  &.span10    { .tableColumns(10); }
  &.span11    { .tableColumns(11); }
  &.span12    { .tableColumns(12); }
}


// State marker

.table tbody > tr > td.state-marker {
  background-color: @info-border;
  //border-left-color: @info-border;
}

.table-hover tbody tr:hover > td.state-marker {
    //border-left-color: darken(@info-border, 5%);
    background-color: darken(@info-border, 5%);
}

.table-state-mixin(@class, @border-color, @bg-color) {

  .table .@{class} .state-marker {
    background-color: @border-color;
    //border-left-color: @border-color;
  }

  .table tbody > tr.@{class} > td {
      background-color: @bg-color;
  }

  .table tbody {
    > tr.@{class}:nth-child(even) > td,
    > tr.@{class}:nth-child(even) > th {
      background-color: darken(@bg-color, 2.5%);
    }
  }

  .table-hover tbody > tr.@{class}:hover > td {
    background-color: darken(@bg-color, 5%);
    //border-left-color: darken(@bg-color, 5%);
  }

  .table tbody {
    > tr.@{class}:nth-child(even) > td.state-marker,
    > tr.@{class}:nth-child(even) > th.state-marker {
      background-color: @border-color;
    }
  }

  .table-hover tbody {
    > tr.@{class}:hover > td.state-marker,
    > tr.@{class}:nth-child(even):hover > td.state-marker,
    > tr.@{class}:nth-child(even):hover > th.state-marker {
      background-color: darken(@border-color, 5%);
    }
  }
}

.table .state-marker,
.state-marker {
  padding: 0px;
  margin: none;
  width: 7px;
}

.table-state-mixin(disabled,     @disabled-border,      @disabled-bg);
//.table-state-mixin(up,           @info-border,          @info-bg);
.table-state-mixin(warning,      @warning-border,       @warning-bg);
.table-state-mixin(error,        @danger-border,        @danger-bg);
.table-state-mixin(suppressed,   @suppress-border,      @suppress-bg);
.table-state-mixin(recovery,     @recovery-border,      @recovery-bg);
.table-state-mixin(success,      @success-border,       @success-bg);
.table-state-mixin(info,         @info-border,          @info-bg);
.table-state-mixin(delay,        @delay-border,         @delay-bg);

.table-state-mixin(ignore,       @ignore-border,        @ignore-bg);
.table-state-mixin(ignore-error, @ignore-error-border,  @ignore-error-bg);